CREATE DATABASE STUDENTS;

USE STUDENTS;

CREATE TABLE STUDENTS1(
     ID INT ,
	 NAME VARCHAR(225),
	 TOWN VARCHAR(225),
	 PERCENTAGE DECIMAL,
	 BRANCH VARCHAR(225)
	 );

	 INSERT INTO STUDENTS1 VALUES(1,'SONIYA','JAIPUR',65,'CSE'),
	                            (2,'ANUJA','DELHI',70,'ECE'),
								(3,'HARSHAD','PUNE',89,'IT'),
								(4,'PRACHI','CHENNAI',86,'CSE'),
								(5,'RENUKA','OOTY',95,'EEE');

CREATE TABLE STUDENTS2(
       ID INT ,
	   NAME VARCHAR(225),
	   TOWN VARCHAR(225),
	   PERCENTAGE DECIMAL,
	   BRANCH VARCHAR(225)
	   );


INSERT INTO STUDENTS2 VALUES(1,'SONIYA','JAIPUR',65,'CSE'),
                            (2,'SWATHI','SURAT',90,'EEE'),
							(3,'PAKHI','MUMBAI',78,'IT'),
							(4,'JAYA','GOA',88,'ECE'),
							(5,'RENUKA','OOTY',95,'EEE');


SELECT*FROM STUDENTS1 UNION SELECT *FROM STUDENTS2;


SELECT*FROM STUDENTS1 UNION ALL SELECT *FROM STUDENTS2;


SELECT*FROM STUDENTS1 INTERSECT SELECT*FROM STUDENTS2;

SELECT*FROM STUDENTS1 except SELECT *FROM STUDENTS2

SELECT DISTINCT NAME FROM STUDENTS1

SELECT DISTINCT NAME FROM STUDENTS2

SELECT BRANCH, AVG(PERCENTAGE)AS PERCENTAGE FROM STUDENTS2 GROUP BY BRANCH;


use students

select *from students2

select avg(PERCENTAGE) FROM STUDENTS2 WHERE PERCENTAGE > 80

SELECT MIN(PERCENTAGE)  AS MINPERCENTAGE FROM STUDENTS2

SELECT MAX(PERCENTAGE) AS MAXPERCENTAGE FROM STUDENTS2

SELECT SUM(PERCENTAGE) AS SUMPERCENTAGE FROM STUDENTS2

SELECT COUNT(NAME) AS COUNTNAME  FROM STUDENTS2

SELECT DISTINCT NAME FROM STUDENTS2






SELECT *FROM STUDENTS1
SELECT*FROM STUDENTS2


select STUDENTS1.ID, STUDENTS1.NAME, STUDENTS1.TOWN, STUDENTS1.PERCENTAGE from STUDENTS1 inner join STUDENTS2 on  STUDENTS1.NAME= STUDENTS2.NAME

select STUDENTS1.ID, STUDENTS1.NAME, STUDENTS1.TOWN, STUDENTS1.PERCENTAGE,STUDENTS1.BRANCH from STUDENTS1 LEFT join STUDENTS2 on  STUDENTS1.NAME= STUDENTS2.NAME

select STUDENTS1.ID, STUDENTS1.NAME, STUDENTS1.TOWN, STUDENTS1.PERCENTAGE,STUDENTS1.BRANCH from STUDENTS1 RIGHT join STUDENTS2 on  STUDENTS1.NAME= STUDENTS2.NAME

select STUDENTS1.ID, STUDENTS1.NAME, STUDENTS1.TOWN, STUDENTS1.PERCENTAGE,STUDENTS1.BRANCH from STUDENTS1 FULL join STUDENTS2 on  STUDENTS1.NAME= STUDENTS2.NAME

select STUDENTS1.ID, STUDENTS1.NAME, STUDENTS1.TOWN, STUDENTS1.PERCENTAGE,STUDENTS1.BRANCH from STUDENTS1 CROSS join STUDENTS2 

SELECT *FROM STUDENTS1,STUDENTS2 WHERE STUDENTS1.NAME=STUDENTS2.NAME

SELECT*FROM STUDENTS1 JOIN STUDENTS2 ON STUDENTS1.NAME=STUDENTS2.NAME

SELECT *FROM STUDENTS1,STUDENTS2 WHERE STUDENTS1.PERCENTAGE<=STUDENTS2.PERCENTAGE

SELECT *FROM STUDENTS1,STUDENTS2 WHERE STUDENTS1.PERCENTAGE>=STUDENTS2.PERCENTAGE

select STUDENTS1.ID, STUDENTS1.NAME, STUDENTS1.TOWN, STUDENTS1.PERCENTAGE from STUDENTS1 join STUDENTS2 on  STUDENTS1.NAME= STUDENTS2.NAME










----len--
SELECT LEN('SWRNA') AS CHARLEN

---ASCII--
SELECT ASCII('A') AS ASCI

--REPLACE---
SELECT REPLACE('COUNTRY','Y','LIES') AS CHANGES

----STR--
SELECT STR(134.563) 

---UPPER--
SELECT UPPER('UPPER')

--LOWER--
SELECT LOWER('LOWER')

---REVERSE--
SELECT REVERSE('SWARNA')

---DATE AND TIME FUNCTIONS---

SELECT dateadd (mm, 2, '2010-02-03')
SELECT datediff ( year, convert (datetime,'2006-05-06'), convert ( datetime,'2009-01-01'))
SELECT datepart (mm,'2008-01-01')
SELECT day ('2010-03-21')
SELECT month ('2007-04-03')
SELECT year ('2011-04-17')
 

 --MATHEMATICAL FUNCTIONS--
 SELECT ABS(-99)
 SELECT SIN(1.5)
 SELECT CEILING(14.45)
 SELECT EXP(45)
 SELECT FLOOR(15.55)
 SELECT LOG(5.4)
 
 ---RANK FUNCTIONS--
SELECT ID,NAME,TOWN,PERCENTAGE,BRANCH
,RANK()OVER (ORDER BY PERCENTAGE DESC ) AS RNK
,DENSE_RANK()OVER(ORDER BY PERCENTAGE DESC ) AS DENRNK
,ROW_NUMBER()OVER(ORDER BY PERCENTAGE  DESC) AS RN
,NTILE(2) OVER(ORDER BY PERCENTAGE DESC) AS NTIL
FROM STUDENTS2

----SYSTEM FUNCTIONS--
SELECT HOST_NAME() AS HN                       /RETURNS HOST COMPUTER NAME /
SELECT HOST_ID()AS HI                          /RETURNS THE HOST PROCESS ID /
SELECT SUSER_ID() AS SI                        /RETURNS THE SERVER USERS ID NUMBER FROM SYSLOGINS/
SELECT SUSER_NAME()AS SN                      /RETURNS THE NAME OF THE CURRENT SERVER USER/
SELECT USER_ID() AS UI                        /RETURNS THE ID NUM OF THE SPECIFIED USER /
SELECT USER_NAME()AS UN                       /RETURNS NAME WITHIN THE DATABASE OF THE SPECIFIED USER/
SELECT DB_NAME() AS DN                        /RETURNS THE DATABASE NAME/
SELECT DB_ID()AS DI                           /RETURNS DATABASE ID NUMBER/


SELECT * FROM STUDENTS1 WHERE  PERCENTAGE = ANY (SELECT PERCENTAGE FROM STUDENTS1 WHERE  ID >= 3)

SELECT * FROM STUDENTS1 WHERE  PERCENTAGE < ALL (SELECT PERCENTAGE FROM STUDENTS1 WHERE  ID >= 3)

SELECT * FROM STUDENTS1 WHERE  EXISTS (SELECT * FROM STUDENTS2 WHERE STUDENTS1.NAME=STUDENTS2.NAME)

SELECT *FROM STUDENTS1 WHERE PERCENTAGE>(SELECT AVG(PERCENTAGE) FROM STUDENTS1);

SELECT *FROM STUDENTS1 JOIN (SELECT AVG(PERCENTAGE) AS PER FROM STUDENTS1)AVG_PER ON STUDENTS1.PERCENTAGE>AVG_PER.PER; 


SELECT *FROM STUDENTS1 WHERE BRANCH NOT IN (SELECT  BRANCH FROM STUDENTS1);

SELECT *FROM STUDENTS1 WHERE ID IN (2,3,5);


SELECT NAME,PERCENTAGE FROM STUDENTS2 GROUP BY NAME,PERCENTAGE HAVING PERCENTAGE >= 85;

 BEGIN TRANSACTION
 DELETE FROM STUDENTS2 WHERE ID=2;
 COMMIT;

 SELECT *FROM STUDENTS2

 BEGIN TRANSACTION
 INSERT INTO STUDENTS2 VALUES(2,'SWATHI','SURAT',90,'EEE');
 SAVE TRANSACTION S1
 DELETE FROM STUDENTS2 WHERE BRANCH='CSE'
 SAVE TRANSACTION S2
 UPDATE STUDENTS2 SET NAME ='SANDHYA' WHERE ID=1
 SAVE TRANSACTION S3

 ROLLBACK TRANSACTION S2;

 
 SELECT *FROM STUDENTS2

 USE STUDENTS

CREATE TABLE EMP(
      EMPID INT NOT NULL ,
	  EMPNAME VARCHAR(225) NOT NULL,
	  SALARY INT CHECK(SALARY < 10000),
	  EMPDEPT VARCHAR(225) DEFAULT 'OPERATIONS',
	  PRIMARY KEY(EMPID)
	  );

	  CREATE TABLE DEPT(
	            EMPID INT FOREIGN  KEY REFERENCES EMP(EMPID),
				DEPTID INT NOT NULL UNIQUE,
				DEPTNAME VARCHAR(225)
				);

				INSERT INTO EMP (EMPID,EMPNAME,SALARY) VALUES(81,'RAM',9000),
				                                             (92,'SITA',7000),
															 (39,'GITA',5000);

INSERT INTO  DEPT VALUES(1,11,'SALES'), 
                       (2,33,'IT'),
					   (3,99,'FINANCE');

					   SELECT*FROM EMP

					   SELECT *FROM DEPT

					   
	 
